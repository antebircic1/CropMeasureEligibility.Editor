// <auto-generated />
using System;
using CropMeasureEligibility.Editor.Infrastructure.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CropMeasureEligibility.Editor.Migrations
{
    [DbContext(typeof(EditorDbContext))]
    [Migration("20240229134231_AddedActionContext")]
    partial class AddedActionContext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CropMeasureEligibility.Editor.Models.ActionContext.CommonMeasureDcdefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ControlTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DeclarationId")
                        .HasColumnType("int");

                    b.Property<string>("FocusArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InitialPhaseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelayRedCalcUsingDecId")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsForDecisionAdministration")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsForPublish")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsObligationReductionApplicable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsVgoapplicable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsVisbileOnSummary")
                        .HasColumnType("bit");

                    b.Property<string>("MeasureCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MeasureGroupId")
                        .HasColumnType("int");

                    b.Property<int>("MeasureId")
                        .HasColumnType("int");

                    b.Property<string>("MeasureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MeasurePillarId")
                        .HasColumnType("int");

                    b.Property<string>("NoticeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NoticeTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("OperationTypeId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMeasureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductionTypeId")
                        .HasColumnType("int");

                    b.Property<int>("QuantitiesFundSourceId")
                        .HasColumnType("int");

                    b.Property<int?>("RequestDocumentTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CommonMeasureDcdefinitions");
                });

            modelBuilder.Entity("CropMeasureEligibility.Editor.Models.ActionContext.DcanimalType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DcanimalTypes");
                });

            modelBuilder.Entity("CropMeasureEligibility.Editor.Models.ActionContext.Dccategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegendName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dccategories");
                });

            modelBuilder.Entity("CropMeasureEligibility.Editor.Models.ActionContext.Livestock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AnimalBreedCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AnimalBreedId")
                        .HasColumnType("int");

                    b.Property<int?>("AnimalCategoryTypeId")
                        .HasColumnType("int");

                    b.Property<string>("AnimalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<string>("AnimalTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Bolus")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DateBeginOnFarm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeliveryOnSlaughter")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBreeding")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfRegistration")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfSlaughter")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateStartOfFattening")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExclusionId")
                        .HasColumnType("int");

                    b.Property<int?>("FarmId")
                        .HasColumnType("int");

                    b.Property<string>("FatherAnimalBreed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherAnimalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HadOffspring")
                        .HasColumnType("bit");

                    b.Property<string>("Ikg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("InFattening")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBreedingHead")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRegistered")
                        .HasColumnType("bit");

                    b.Property<string>("Jibg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MicrochipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("MilkControl")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedProcessingId")
                        .HasColumnType("int");

                    b.Property<string>("MotherAnimalBreed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherAnimalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProcessingId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SlaughterAge")
                        .HasColumnType("int");

                    b.Property<int?>("SowRno")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Livestocks");
                });

            modelBuilder.Entity("CropMeasureEligibility.Editor.Models.ActionContext.LivestockCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FarmId")
                        .HasColumnType("int");

                    b.Property<bool>("LivestockActive")
                        .HasColumnType("bit");

                    b.Property<int>("LivestockId")
                        .HasColumnType("int");

                    b.Property<int>("ProcessingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LivestockCategories");
                });

            modelBuilder.Entity("CropMeasureEligibility.Editor.Models.ActionContext.LivestockMeasure", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FarmId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsSeparatedMeasure")
                        .HasColumnType("bit");

                    b.Property<bool>("LivestockActive")
                        .HasColumnType("bit");

                    b.Property<int>("LivestockId")
                        .HasColumnType("int");

                    b.Property<string>("MeasureCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MeasureId")
                        .HasColumnType("int");

                    b.Property<int>("ProcessingId")
                        .HasColumnType("int");

                    b.Property<int?>("RequestDocumentTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LivestockMeasures");
                });

            modelBuilder.Entity("CropMeasureEligibility.Editor.Models.ActionContext.LivestockRequestItemMeasures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BarcodeId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("Checked")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("FarmId")
                        .HasColumnType("int");

                    b.Property<int>("LivestockId")
                        .HasColumnType("int");

                    b.Property<int>("MeasureDefinitionId")
                        .HasColumnType("int");

                    b.Property<int>("RequestDocumentId")
                        .HasColumnType("int");

                    b.Property<int>("RequestItemId")
                        .HasColumnType("int");

                    b.Property<int>("SubmissionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LivestockRequestItemMeasures");
                });

            modelBuilder.Entity("CropMeasureEligibility.Editor.Models.ActionContextIdIdentifier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ActionContextId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ActionContextIdIdentifiers");
                });

            modelBuilder.Entity("CropMeasureEligibility.Editor.Models.FarmDestinationCropMeasuresEligibility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ActionContextId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CropMeasureEligibility")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FarmId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FarmDestinationCropMeasuresEligibilityes");
                });

            modelBuilder.Entity("CropMeasureEligibility.Editor.Models.FarmIdBarcodeId", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FarmId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FarmIdBarcodeIds");
                });

            modelBuilder.Entity("CropMeasureEligibility.Editor.Models.FarmSourceCropMeasuresEligibility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ActionContextId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CropMeasureEligibility")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FarmId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FarmSourceCropMeasuresEligibilityes");
                });

            modelBuilder.Entity("CropMeasureEligibility.Editor.Models.ListD.ActionContextLivestockRequestItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ActionContextId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActionContextYear")
                        .HasColumnType("int");

                    b.Property<int>("FarmId")
                        .HasColumnType("int");

                    b.Property<string>("LivestockDictionaryAfterUpdate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LivestockRequestItems")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LivestockRequestItemsAfterUpdate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequestDocumentTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ActionContextLivestockRequestItems");
                });

            modelBuilder.Entity("CropMeasureEligibility.Editor.Models.ListD.DcanimalBreed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AnimalTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AnimalTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsProtected")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DcanimalBreeds");
                });

            modelBuilder.Entity("CropMeasureEligibility.Editor.Models.ListD.VgoLivestockProtectedObligation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("AnimalBreedId")
                        .HasColumnType("int");

                    b.Property<int>("AnimalTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeactivated")
                        .HasColumnType("datetime2");

                    b.Property<int>("EndYear")
                        .HasColumnType("int");

                    b.Property<int>("FarmId")
                        .HasColumnType("int");

                    b.Property<int>("FirstYear")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UgQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("YearsInCommitment")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VgoLivestockProtectedObligations");
                });
#pragma warning restore 612, 618
        }
    }
}
